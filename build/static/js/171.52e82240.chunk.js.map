{"version":3,"file":"static/js/171.52e82240.chunk.js","mappings":"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","sources":["components/Forms/auth/admin.jsx","components/Forms/auth/student.jsx","components/Forms/auth/teacher.jsx","pages/Dashboard/Institutes/Departments/Curses/Group/index.jsx","pages/Dashboard/Institutes/Departments/Curses/index.jsx","pages/Dashboard/Institutes/Departments/index.jsx","pages/Dashboard/Institutes/index.jsx","pages/Dashboard/Invitation/index.jsx","pages/Dashboard/AdminGet/Admins.jsx","pages/Dashboard/All/Institutes.jsx","pages/Dashboard/All/students.jsx","pages/Dashboard/All/teachers.jsx","pages/Dashboard/All/departments.jsx","pages/Dashboard/All/courses.jsx","pages/Dashboard/All/groups.jsx","pages/Dashboard/routes/admin.jsx","components/Forms/auth|sync|/^/.//.*$"],"sourcesContent":["\nimport React,{useState,useMemo} from 'react';\nimport axios from '../../../axios';\nimport {\n  Form,\n  Input,\n  Button,\n  DatePicker,\n  message\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\n\nconst AdminInvitation = () => {\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const [messageApi, contextHolder] = message.useMessage();\n  const [type] = useState(\"admin\");\n\n  const rules = useSelector(function (state) {\n    return state.rules;\n  });\n  const rule = useMemo(() => {\n    return rules[type];\n  }, [type, rules]);\n\n  const success = (message) => {\n      messageApi.open({\n      type: 'success',\n      content: message,\n      duration: 10,\n    });\n  };\n\n  const onFinish = async () => {\n    const values = await form.validateFields();\n    values.birthDate = values['birthDate'] ? values['birthDate'].format('YYYY-MM-DD') : undefined;\n\n    axios.post(rule.invitation, values).then((response) => {\n      if (response?.status === 200) {\n        success(response?.data.message);\n        form.resetFields();\n      }\n    }).catch((error) => {\n      // console.log(error);\n      if (error.response && error.response.data && error.response.data.errors) {\n        let fields = [\"firstName\", \"lastName\",\"patronymic\",\"birthDate\",\"email\", ];\n        fields.forEach(field => {;\n          if (error.response.data.errors[field]) {\n            form.setFields([\n              {\n                name: field,\n                errors: [t(error.response.data.errors[field][0])]\n              }\n            ]);\n          }\n        });\n      }\n    });\n  }\n  \n\n  return (\n    <Form\n      form={form}\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 14,\n      }}\n      layout=\"horizontal\"\n      onFinish={onFinish}\n    >\n      <Form.Item label= {t(\"FirstName\")} name='firstName' >\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"LastName\")} name='lastName'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"Patronymic\")} name='patronymic'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"DatePicker\")} name='birthDate'>\n        <DatePicker />\n      </Form.Item>\n\n      <Form.Item label={t(\"Email\")} name='email'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item>\n        {contextHolder}\n        <Button type=\"primary\" htmlType=\"subZmit\" className=\"submit-form-button\">\n          {t('Submit')}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AdminInvitation;","import React, { useState, useEffect } from 'react';\nimport axios from '../../../axios';\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n  DatePicker,\n  message\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst StudentInvitation = () => {\n  const [form] = Form.useForm();\n  const [institutes, setInstitutes] = useState(null);\n  const [departments, setDepartments] = useState({});\n  const [selectInstitute, setSelectInstitute] = useState(null);\n  const [course, setCourse] = useState({});\n  const [group, setGroup] = useState({});\n  const [subgroup, setSubGroup] = useState(null);\n  const [selectDepartments, setSelectDepartments] = useState(null);\n  const [selectCourse, setSelectCourse] = useState(null);\n  const { t } = useTranslation()\n\n  const [messageApi, contextHolder] = message.useMessage();\n\n  \n  const success = (message) => {\n    messageApi.open({\n    type: 'success',\n    content: message,\n    duration: 10,\n  });\n};\n\n  useEffect(() => {\n    axios.get(\"/api/institute/get\").then((response) => {\n      setInstitutes(response.data.map(institute => ({\n        value: institute.id,\n        label: institute.name\n      })))\n    }).catch(() => setInstitutes([]));\n  }, []);\n\n  const handleChangeInstitute = (value) => {\n    setSelectInstitute(value);\n\n    if (!departments[value]) {\n      axios.get(`/api/institute/get/${value}/departments`).then((response) => {\n        setDepartments({\n          ...departments,\n          [value]: response.data.map(department => ({\n            value: department.id,\n            label: department.name\n          }))\n        })\n      }).catch(() => setDepartments([]));\n    }\n  };\n\n  const handleChangeDepartments = (value) => {\n    setSelectDepartments(value);\n\n    if (!course[value]) {\n      axios.get(`/api/department/get/${value}/courses`).then((response) => {\n        setCourse({\n          ...course,\n          [value]: response.data.map(course => ({\n            value: course.id,\n            label: course.number + \"-\" + course.degree + \"-\" + course.type\n          }))\n        })\n      }).catch(() => setDepartments([]));\n    }\n  };\n\n  const handleChangeCourse = (id) => {\n    setSelectCourse(id);\n\n    if (!group[id]) {\n      axios.get(`/api/course/get/${id}/groups`).then((response) => {\n        setGroup({\n          ...group,\n          [id]: {\n            data: response.data,\n            parents: response.data.filter(g => !g.parentId).map(group => ({\n              value: group.id,\n              label: group.number\n            }))\n          }\n        })\n      }).catch(() => setGroup([]));\n    }\n  };\n\n  const handleSubGroup = (id) => {\n    setSubGroup(group[selectCourse].data.filter(subGroup => subGroup.parentId === id).map(subGroup => ({\n      value: subGroup.id,\n      label: subGroup.number\n    })));\n  }\n\n  const onFinish = async () => {\n    const values = await form.validateFields();\n    values.birthDate = !values['birthDate'] ? \"\" : values['birthDate'].format('YYYY-MM-DD');\n\n    axios.post('/student/send-invitation', values).then((response) => {\n      if (response?.status === 200) {\n        success(response?.data.message);\n        form.resetFields();\n      }\n    }).catch((error) => {\n      \n      if (error.response && error.response.data && error.response.data.errors) {\n        let fields = [\"firstName\", \"lastName\",\"patronymic\",\"birthDate\",\"email\",\"group\",\"courseId\", \"departmentId\",\"groupId\",\"instituteId\",\"subgroupId\"];\n\n        fields.forEach(field => {;\n          if (error.response.data.errors[field]) {\n            form.setFields([\n              {\n                name: field,\n                errors: [t(error.response.data.errors[field][0])]\n              }\n            ]);\n          }\n        });\n      }\n    }); \n  }\n\n  return (\n    <Form\n      form={form}\n      labelCol={{\n        span: 4,\n      }}\n      wrapperCol={{\n        span: 14,\n      }}\n      layout=\"horizontal\"\n      onFinish={onFinish}\n    >\n      <Form.Item label={t(\"FirstName\")} name='firstName' >\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"LastName\")} name='lastName'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"Patronymic\")} name='patronymic'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"DatePicker\")} name='birthDate'>\n        <DatePicker />\n      </Form.Item>\n\n      <Form.Item label={t(\"Email\")} name='email'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"Institute\")} name='instituteId'>\n        <Select defaultValue=\"...\" options={institutes} onChange={handleChangeInstitute}   />\n      </Form.Item>\n\n      <Form.Item label={t(\"Department\")} name='departmentId'>\n        <Select defaultValue=\"...\" options={departments[selectInstitute]} onChange={handleChangeDepartments} />\n      </Form.Item>\n\n      <Form.Item label={t(\"Course\")} name='courseId'>\n        <Select defaultValue=\"...\" options={course[selectDepartments]} onChange={handleChangeCourse} />\n      </Form.Item>\n\n      <Form.Item label={t(\"Group\")} name='groupId'>\n        <Select defaultValue=\"...\" options={group[selectCourse]?.parents} onChange={handleSubGroup} />\n      </Form.Item>\n\n      <Form.Item label={t(\"SubGroup\")} name='subgroupId'>\n        <Select defaultValue=\"...\" options={subgroup} />\n      </Form.Item>\n\n      <Form.Item>\n        {contextHolder}\n        <Button type=\"primary\" htmlType=\"subZmit\" className=\"submit-form-button\">\n          {t('Submit')}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default StudentInvitation;","\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../../axios';\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n  DatePicker,\n  Cascader,\n  message\n} from 'antd';\n\nimport { useTranslation } from 'react-i18next';\n\nconst TeacherInvitation = () => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const [institutes, setInstitutes] = useState(null);\n  const [departments, setDepartments] = useState({});\n  const [selectInstitute, setSelectInstitute] = useState(null);\n  const [courses, setCourses] = useState(null);\n  const [groups, setGroups] = useState(null);\n  const [subgroup, setSubGroup] = useState(null);\n  const [messageApi, contextHolder] = message.useMessage();\n\n\n  \n\n\n  const success = () => {\n   \n      messageApi.open({\n      type: 'success',\n      content: 'Invite sent',\n      duration: 10,\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"/api/institute/get\").then((response) => {\n      setInstitutes(response.data.map(institute => ({\n        value: institute.id,\n        label: institute.name\n      })))\n    }).catch(() => setInstitutes([]));\n\n    axios.get(\"/api/course/get\").then((response) => {\n      setCourses(response.data.map(course => ({\n        value: course.id,\n        label: course.number + \"-\" + course.degree + \"-\" + course.type,\n        children: []\n      })))\n    }).catch(() => setCourses([]));\n\n    axios.get(\"/api/group/get-course\").then((response) => {\n      let groups = [], subgroups = [];\n\n      response.data.forEach(group => {\n        if (!group.parentId) {\n          groups.push({\n            value: group.id,\n            label: `${group.course.number} - ${group.number} ${group.course.degree} ${group.course.type}`,\n            children: []\n          })\n        } else {\n          subgroups.push({\n            value: group.id,\n            label: `${group.course.number} - ${group.number} ${group.course.degree} ${group.course.type}`,\n            children: []\n          })\n        }\n      });\n\n      setGroups(groups);\n      setSubGroup(subgroups);\n    }).catch(() => setCourses([]));\n  }, []);\n\n  const handleChangeInstitute = (value) => {\n    setSelectInstitute(value);\n\n    if (!departments[value]) {\n      axios.get(`/api/institute/get/${value}/departments`).then((response) => {\n        setDepartments({\n          ...departments,\n          [value]: response.data.map(department => ({\n            value: department.id,\n            label: department.name\n          }))\n        })\n      }).catch(() => setDepartments([]));\n    }\n  };\n  \n  const onFinish = async () => {\n    const values = await form.validateFields();\n    values.birthDate = !values['birthDate'] ? undefined : values['birthDate'].format('YYYY-MM-DD');    \n    [\"courseId\", \"groupId\", \"subgroupId\"].forEach(key => {\n      values[key] = values[key].map(element => element[0]);    })\n\n\n    axios.post('/student/send-invitation', values).then((response) => {\n      if (response?.status === 200) {\n        success(response?.data.message);\n        form.resetFields();\n      }\n    }).catch((error) => {\n      if (error.response && error.response.data && error.response.data.errors) {\n        let fields = [\"firstName\", \"lastName\",\"patronymic\",\"birthDate\",\"position\",\"email\",\"courseId\",\"departmentId\",\"parentId\",\"groupId\", \"instituteId\"];\n        fields.forEach(field => {;\n          if (error.response.data.errors[field]) {\n            form.setFields([\n              {\n                name: field,\n                errors: [t(error.response.data.errors[field][0])]\n              }\n            ]);\n          }\n        });\n      }\n    });\n  }\n\n  return (\n    <Form\n      form={form}\n      labelCol={{\n        span: 4,\n      }}\n      wrapperCol={{\n        span: 14,\n      }}\n      layout=\"horizontal\"\n      onFinish={onFinish}\n    >\n      <Form.Item label={t(\"FirstName\")} name='firstName' >\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"LastName\")} name='lastName'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"Patronymic\")} name='patronymic'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"DatePicker\")} name='birthDate'>\n        <DatePicker />\n      </Form.Item>\n\n      <Form.Item label={t(\"Email\")} name='email'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"Position\")} name='position'>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label={t(\"Institute\")} name='instituteId'>\n        <Select defaultValue=\"...\" options={institutes} onChange={handleChangeInstitute} />\n      </Form.Item>\n\n      <Form.Item label={t(\"Department\")} name='departmentId'>\n        <Select defaultValue=\"...\" options={departments[selectInstitute]} />\n      </Form.Item>\n\n      <Form.Item label={t(\"Course\")} name='courseId'>\n        <Cascader options={courses} multiple />\n      </Form.Item>\n\n      <Form.Item label={t(\"Group\")} name='groupId'>\n        <Cascader options={groups} multiple/>\n      </Form.Item>\n\n      <Form.Item label={t(\"SubGroup\")} name='subgroupId'>\n        <Cascader options={subgroup} multiple />\n      </Form.Item>\n\n      <Form.Item>\n      {contextHolder}\n        <Button type=\"primary\" htmlType=\"subZmit\" className=\"submit-form-button\">\n          {t('Submit')}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default TeacherInvitation;\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Table,\n  Popconfirm,\n  Input,\n  Modal,\n  Button,\n  Form,\n  Select,\n  Checkbox,\n} from \"antd\";\nimport { Radio, Tabs } from \"antd\";\n\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nimport axios from \"../../../../../../axios\";\nimport { Route } from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\n\nconst Groups = () => {\n  const { courseId, groupId, parentId } = useParams();\n  const [modal, setModal] = useState(false);\n  const [key, setKey] = useState(0);\n  const [tableData, setTableData] = useState(null);\n  const [type, setType] = useState(\"groups\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const getTableData = useCallback(() => {\n    axios\n      .get(`/api/course/get/${courseId}/${type}`)\n      .then((response) => {\n        let groups = [];\n        response.data.forEach((element) => {\n          if (!element.parentId) {\n            groups.push({\n              ...element,\n              children: [],\n            });\n          }\n\n          if (element.parentId) {\n            groups.forEach((g) => {\n              if (g.id === element.parentId) {\n                g.children.push(element);\n              }\n            });\n          }\n        });\n        setTableData(groups);\n      })\n      .catch(() => setTableData([]));\n  }, [type]);\n\n  useEffect(() => {\n    getTableData();\n  }, [getTableData]);\n\n  const Columns = useMemo(() => {\n    const columns = {\n      groups: [\n        {\n          title: \"ID\",\n          dataIndex: \"id\",\n          key: \"id\",\n        },\n        {\n          title: \"Number\",\n          dataIndex: \"number\",\n          key: \"number\",\n        },\n        {\n          title: \"Actions\",\n          dataIndex: \"actions\",\n          width: 50,\n          render: (_, row) => (\n            <div style={{ display: \"flex\", gap: 10 }}>\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => removeGroup(row.id, row.parentId)}\n              >\n                <DeleteOutlined />\n              </Popconfirm>\n              <EditOutlined\n                onClick={() => {\n                  setModal(true);\n                  form.setFieldsValue(row);\n                }}\n              />\n            </div>\n          ),\n        },\n      ],\n      teachers: [\n        {\n          title: \"ID\",\n          dataIndex: \"id\",\n          key: \"id\",\n        },\n        {\n          title: \"First Name\",\n          dataIndex: \"firstName\",\n          key: \"name\",\n        },\n        {\n          title: \"Last Name\",\n          dataIndex: \"lastName\",\n          key: \"lastName\",\n        },\n        {\n          title: \"Patronymic\",\n          dataIndex: \"patronymic\",\n          key: \"patronymic\",\n        },\n        {\n          title: \"Position\",\n          dataIndex: \"position\",\n          key: \"position\",\n        },\n        {\n          title: \"Actions\",\n          dataIndex: \"actions\",\n          width: 50,\n          render: (_, row) => (\n            <div style={{ display: \"flex\", gap: 10 }}>\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => removeGroup(row.id, row.parentId)}\n              >\n                <DeleteOutlined />\n              </Popconfirm>\n              <EditOutlined\n                onClick={() => {\n                  setModal(true);\n                  form.setFieldsValue(row);\n                }}\n              />\n            </div>\n          ),\n        },\n      ],\n      students: [\n        {\n          title: \"ID\",\n          dataIndex: \"id\",\n          key: \"id\",\n        },\n        {\n          title: \"First Name\",\n          dataIndex: \"firstName\",\n          key: \"name\",\n        },\n        {\n          title: \"Last Name\",\n          dataIndex: \"lastName\",\n          key: \"lastName\",\n        },\n        {\n          title: \"Patronymic\",\n          dataIndex: \"patronymic\",\n          key: \"patronymic\",\n        },\n        {\n          title: \"Email\",\n          dataIndex: \"email\",\n          key: \"email\",\n        },\n        {\n          title: \"Actions\",\n          dataIndex: \"actions\",\n          width: 50,\n          render: (_, row) => (\n            <div style={{ display: \"flex\", gap: 10 }}>\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => removeGroup(row.id, row.parentId)}\n              >\n                <DeleteOutlined />\n              </Popconfirm>\n              <EditOutlined\n                onClick={() => {\n                  setModal(true);\n                  form.setFieldsValue(row);\n                }}\n              />\n            </div>\n          ),\n        },\n      ],\n    };\n\n    return columns[type];\n  }, [type]);\n\n  const removeGroup = useCallback(\n    (id, parentId) => {\n      axios.delete(`/api/group/delete/${id}`).then((response) => {\n        if (parentId) {\n          setTableData((prev) => {\n            prev.map((element) => {\n              if (element.id === parentId) {\n                element.children = element.children.filter(\n                  (item) => item.id !== id\n                );\n              }\n            });\n            return prev;\n          });\n        } else {\n          setTableData((prev) => prev.filter((item) => item.id !== id));\n        }\n\n        setKey(key + 1);\n      });\n    },\n    [type]\n  );\n  useEffect(() => {\n    getTableData();\n  }, [getTableData]);\n\n  return (\n    <div className=\"group\">\n      <Modal\n        title={false ? \"Edit group number\" : \"Add group number\"}\n        open={modal}\n        onOk={() => {\n          if (form.getFieldValue(\"id\")) {\n            axios\n              .patch(\n                `/api/group/edit/${form.getFieldValue(\"id\")}`,\n\n                form.getFieldsValue(),\n                {\n                  parent_id: parentId,\n                }\n              )\n              .then((response) => {\n                if (response.status === 200) {\n                  let newGroup = tableData.map((element) => {\n                    if (element.id === response.data.id) {\n                      element = {\n                        ...response.data,\n                        children: element.children,\n                      };\n                    }\n                    // }else{\n                    //   (element.children.id === response.data.id)\n                    // }\n                    console.log(element.children);\n                    return element;\n                  });\n                  setTableData(newGroup);\n                  setTableData(getTableData);\n                  // setModal({ isOpen: false, data: {} })\n                  setModal(false);\n                  let newSubGroup = tableData.map((element) => {\n                    if (element.id === response.data.id) {\n                      element = {\n                        ...response.data,\n                        children: element.children,\n                      };\n                    }\n                    // }else{\n                    //   (element.children.id === response.data.id)\n                    // }\n                    // console.log(element.children);\n                    return element;\n                  });\n                }\n\n                setKey(key + 1);\n              });\n          } else {\n            axios\n              .post(`/api/group/create`, {\n                ...modal.data,\n                ...form.getFieldsValue(),\n                parent_id: form.getFieldValue(\"parentId\"),\n                course_id: courseId,\n                group_id: groupId,\n              })\n              .then((response) => {\n                if (response.status === 201) {\n                  let asParent = true;\n                  console.log(tableData);\n                  tableData.forEach((element) => {\n                    if (element.id === response.data.parentId) {\n                      element.children.push(response.data);\n\n                      asParent = false;\n                    }\n                  });\n\n                  if (asParent) {\n                    tableData.push({\n                      ...response.data,\n                      children: [],\n                    });\n                  }\n                  setTableData(tableData);\n                  form.resetFields();\n                  setModal(false);\n\n                  setKey(key + 1);\n                }\n              });\n          }\n        }}\n        onCancel={() => {\n          form.resetFields();\n          setModal(false);\n        }}\n      >\n        <Form form={form}>\n          <Form.Item label=\"Number\" name=\"number\">\n            <Input placeholder=\"Group number\" />\n          </Form.Item>\n\n          <Form.Item label=\"ParentGroup\" name=\"parentId\">\n            <Select\n              placeholder=\"group\"\n              options={tableData?.map((data) => ({\n                label: data.number,\n                value: data.id,\n              }))}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Route\n        exact\n        path=\"/dashboard/institutes/:institutesId/:departmentID/:courseID\"\n      >\n        <div style={{ display: \"flex\", gap: 10 }}>\n          {/* <Radio.Button value=\"top\">Groups</Radio.Button> */}\n\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setModal(true);\n              form.resetFields();\n            }}\n          >\n            Add Group\n          </Button>\n          <Button type=\"primary\" onClick={() => setType(\"groups\")}>\n            Groups\n          </Button>\n          <Button type=\"primary\" onClick={() => setType(\"teachers\")}>\n            Teachers\n          </Button>\n          <Button type=\"primary\" onClick={() => setType(\"students\")}>\n            Students\n          </Button>\n        </div>\n        {!tableData ? (\n          <></>\n        ) : (\n          <Table\n            rowKey=\"id\"\n            dataSource={tableData}\n            columns={Columns}\n            loading={loading}\n            key={key}\n          />\n        )}\n      </Route>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React, { useEffect, useMemo, useState, useCallback } from \"react\";\nimport { Route, useParams } from \"react-router-dom\";\n\nimport {\n  Table,\n  Popconfirm,\n  Modal,\n  Input,\n  Button,\n  Select,\n  Form,\n  Drawer,\n} from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport Groups from \"./Group\";\nimport axios from \"../../../../../axios\";\nimport { Link } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst Courses = () => {\n  const { departmentId, parentId } = useParams();\n  const [tableData, setTableData] = useState(null);\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n  const [type, setType] = useState(\"courses\");\n  const [open, setOpen] = useState(false);\n\n  const showDrawer = () => {\n    setOpen(true);\n  };\n  const onClose = () => {\n    setOpen(false);\n  };\n  console.log(departmentId);\n\n  const handleGetCourses = useCallback(() => {\n    axios\n      .get(`/api/department/get/${departmentId}/${type}`)\n      .then((response) => {\n        setTableData(response.data);\n      })\n      .catch(() => setTableData([]));\n  }, [type]);\n\n  useEffect(() => {\n    handleGetCourses();\n  }, [handleGetCourses]);\n\n  const columns = useMemo(() => {\n    const columns = {\n      courses: [\n        {\n          title: \"ID\",\n          dataIndex: \"id\",\n          key: \"id\",\n        },\n        {\n          title: \"Number\",\n          dataIndex: \"number\",\n          key: \"number\",\n          render: (number, row) => (\n            <Link\n              to={`/dashboard/institutes/departments/${departmentId}/${row.id}`}\n            >\n              {number}\n            </Link>\n          ),\n        },\n        {\n          title: \"Degree\",\n          dataIndex: \"degree\",\n          key: \"degree\",\n        },\n        {\n          title: \"Type\",\n          dataIndex: \"type\",\n          key: \"type\",\n        },\n        {\n          title: \"Actions\",\n          dataIndex: \"actions\",\n          width: 50,\n          render: (_, row) => (\n            <div style={{ display: \"flex\", gap: 10 }}>\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => removeCourse(row.id)}\n              >\n                <DeleteOutlined />\n              </Popconfirm>\n              <EditOutlined\n                onClick={() => setModal({ isOpen: true, data: row })}\n              />\n            </div>\n          ),\n        },\n        {\n          title: \"Show\",\n          dataIndex: \"show\",\n          width: 50,\n          render: (show, row) => (\n            <Link\n              to={`/dashboard/institutes/departments/${departmentId}/${row.id}`}\n            >\n              {<Button type=\"primary\">Show Group</Button>}\n            </Link>\n          ),\n        },\n      ],\n      teachers: [\n        {\n          title: \"ID\",\n          dataIndex: \"id\",\n          key: \"id\",\n        },\n        {\n          title: \"First Name\",\n          dataIndex: \"firstName\",\n          key: \"name\",\n        },\n        {\n          title: \"Last Name\",\n          dataIndex: \"lastName\",\n          key: \"lastName\",\n        },\n        {\n          title: \"Patronymic\",\n          dataIndex: \"patronymic\",\n          key: \"patronymic\",\n        },\n        {\n          title: \"Position\",\n          dataIndex: \"position\",\n          key: \"position\",\n        },\n      ],\n    };\n\n    return columns[type];\n  }, [type]);\n\n  const removeCourse = (id) => {\n    axios.delete(`/api/course/delete/${id}`).then((response) => {\n      setTableData((prev) => prev.filter((item) => item.id !== id));\n    });\n  };\n\n  return (\n    <div className=\"course\">\n      <Modal\n        title={modal?.data?.id ? \"Edit Course number\" : \"Add Course number\"}\n        open={modal.isOpen}\n        onOk={() => {\n          if (modal.data.id) {\n            axios\n              .patch(`/api/course/edit/${modal.data.id}`, modal.data)\n              .then((response) => {\n                if (response.status === 200) {\n                  let newCourse = tableData.map((element) => {\n                    if (element.id === response.data.id) {\n                      element = response.data;\n                    }\n\n                    return element;\n                  });\n\n                  setTableData(newCourse);\n\n                  setModal({ isOpen: false, data: {} });\n                } else {\n                  // console.log(response);\n                }\n              });\n          } else {\n            // console.log({ ...modal.data, department_id: departmentId, });\n            axios\n              .post(\"/api/course/create\", {\n                ...modal.data,\n                department_id: departmentId,\n                parent_id: parentId,\n              })\n              .then((response) => {\n                if (response.status === 201) {\n                  setTableData(tableData.concat(response.data));\n                  setModal({ isOpen: false, data: {} });\n                } else {\n                  // console.log(response);\n                }\n              });\n          }\n        }}\n        onCancel={() => setModal({ isOpen: false, data: {} })}\n      >\n        <Form>\n          <Form.Item label=\"Number\" name=\"number\">\n            <Input\n              placeholder=\"Course number\"\n              value={modal?.data?.number}\n              onChange={(event) => {\n                setModal({\n                  ...modal,\n                  data: {\n                    ...modal.data,\n                    number: event.target.value,\n                  },\n                });\n              }}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Degree\" name=\"degree\">\n            <Select\n              defaultValue=\"...\"\n              onChange={(value) => {\n                setModal({\n                  ...modal,\n                  data: {\n                    ...modal.data,\n                    degree: value,\n                  },\n                });\n              }}\n              options={[\n                { label: \"master\", value: \"master\" },\n                { label: \"bachelor\", value: \"bachelor\" },\n                { label: \"PhD\", value: \"PhD\" },\n              ]}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Type\" name=\"type\">\n            <Select\n              defaultValue=\"...\"\n              onChange={(value) => {\n                setModal({\n                  ...modal,\n                  data: {\n                    ...modal.data,\n                    type: value,\n                  },\n                });\n              }}\n              options={[\n                { label: \"available\", value: \"available\" },\n                { label: \"remotely\", value: \"remotely\" },\n              ]}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Route exact path=\"/dashboard/institutes/:institutesId/:departmentID\">\n        <div style={{ display: \"flex\", gap: 10 }}>\n          <Button type=\"primary\" onClick={showDrawer}>\n            Open\n          </Button>\n          <Drawer\n            title=\"Information\"\n            placement=\"right\"\n            onClose={onClose}\n            open={open}\n          ></Drawer>\n          <Button\n            type=\"primary\"\n            onClick={() => setModal({ isOpen: true, data: {} })}\n          >\n            Add Course\n          </Button>\n          <Button type=\"primary\" onClick={() => setType(\"courses\")}>\n            {\" \"}\n            Courses\n          </Button>\n          <Button type=\"primary\" onClick={() => setType(\"teachers\")}>\n            {\" \"}\n            Teachers\n          </Button>\n        </div>\n\n        {!tableData ? (\n          <></>\n        ) : (\n          <Table rowKey=\"id\" dataSource={tableData} columns={columns} />\n        )}\n      </Route>\n      <Route path=\"/dashboard/institutes/:instituteId/:departmentId/:courseId\">\n        <Groups />\n      </Route>\n    </div>\n  );\n};\n\nexport default Courses;\n","import React, { useEffect, useState, useCallback, useMemo} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Table, Modal, Button, Input, Popconfirm } from 'antd';\n\nimport axios from \"../../../../axios\";\nimport { Link, Route } from 'react-router-dom';\nimport Courses from './Curses';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\nconst Departments = () => {\n  const { instituteId } = useParams();\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n  const [tableData, setTableData] = useState(null);\n  const [type, setType] = useState(\"departments\");\n\n  const handleGetInstitute = useCallback(() => {\n    axios.get(`/api/institute/get/${instituteId}/${type}`).then((response) => {\n      setTableData(response.data)\n    }).catch(() => setTableData([]));\n  }, [type]);\n\n  useEffect(() => {\n    handleGetInstitute()\n  }, [handleGetInstitute]);\n\n  const columns = useMemo(() => {\n    const columns = {\n      departments: [\n        {\n          title: 'ID',\n          dataIndex: 'id',\n          key: 'id',\n        },\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (name, row) => <Link to={`/dashboard/institutes/departmen${instituteId}/${row.id}`}>{name}</Link>\n        },\n        {\n          title: 'Actions',\n          dataIndex: 'actions',\n          width: 50,\n          render: (_, row) =>\n            <div style={{ display: 'flex', gap: 10 }}>\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => removeDepartment(row.id)}>\n                <DeleteOutlined />\n              </Popconfirm>\n              <EditOutlined onClick={() => setModal({ isOpen: true, data: row })} />\n            </div>\n        },\n        {\n          title: 'Show',\n          dataIndex: 'show',\n          width: 50,\n          render: (show, row) => <Link to={`/dashboard/institutes/${instituteId}/${row.id}`}>{<Button type='primary'>Show Courses</Button>}</Link>\n        }\n      ],\n      teachers: [\n        {\n          title: 'ID',\n          dataIndex: 'id',\n          key: 'id',\n        },\n        {\n          title: 'First Name',\n          dataIndex: 'firstName',\n          key: 'name'\n        },\n        {\n          title: 'Last Name',\n          dataIndex: 'lastName',\n          key: 'lastName',\n        },\n        {\n          title: 'Patronymic',\n          dataIndex: 'patronymic',\n          key: 'patronymic',\n        },\n        {\n          title: 'Position',\n          dataIndex: 'position',\n          key: 'position',\n        },\n      ]\n    }\n\n    return columns[type];\n  }, [type])\n\n\n \n  const removeDepartment = (id) => {\n    axios.delete(`/api/department/delete/${id}`).then((response) => {\n      setTableData(prev => prev.filter((item) =>  item.id !== id));\n    })\n  \n  };\n\n  return (\n    <div className='department'>\n      <Modal title={modal?.data?.id ? 'Edit Department name' : 'Add Department name'} open={modal.isOpen} onOk={() => {\n        if (modal.data.id) {\n          axios.patch(`/api/department/edit/${modal.data.id}`, modal.data).then(response => {\n            if (response.status === 200) {\n              let newDepartment = tableData.map(element => {\n                if (element.id === response.data.id) {\n                  element = response.data\n                }\n\n                return element\n              });\n\n              setTableData(newDepartment);\n\n              setModal({ isOpen: false, data: {} })\n            } else {\n              // console.log(response);\n            }\n          })\n        } else {\n          axios.post(`/api/department/create`, { ...modal.data, institute_id: instituteId }).then(response => {\n            if (response.status === 201) {\n              setTableData(tableData.concat(response.data));\n\n              setModal({ isOpen: false, data: {} });\n            } else {\n              // console.log(response);\n            }\n          })\n        }\n      }} onCancel={() => setModal({ isOpen: false, data: {} })}>\n        <Input placeholder=\"Department  name\" value={modal?.data?.name} onChange={(event) => {\n          setModal({\n            ...modal,\n            data: {\n              ...modal.data,\n              name: event.target.value,\n\n            }\n          })\n        }} />\n      </Modal>\n      <Route exact path='/dashboard/institutes/:instituteId'>\n        <div style={{ display: 'flex', gap: 10 }}>\n          <Button type='primary' onClick={() => setModal({ isOpen: true, data: {} })}>Add Department</Button>\n        \n          \n        </div>\n        {!tableData\n          ? <></>\n          : <Table\n            rowKey=\"id\"\n            dataSource={tableData}\n              columns={columns} />}           \n      </Route>\n\n      <Route path='/dashboard/institutes/:instituteId/:departmentId'>\n        <Courses />\n      </Route>\n    </div>\n  );\n}\n\nexport default Departments;","import React, { useEffect, useState, Suspense, lazy } from \"react\";\nimport { Table, Popconfirm, Input, Modal, Button } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport axios from \"../../../axios\";\nimport { Link, Route } from \"react-router-dom\";\nimport Departments from './Departments';\n\nconst Institutes = () => {\n  const [institutes, setInstitutes] = useState(null);\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n\n  useEffect(() => {\n    axios\n      .get(\"/api/institute/get\")\n      .then((response) => {\n        setInstitutes(response.data);\n      })\n      .catch(() => setInstitutes([]));\n  }, []);\n\n  const removeInstitute = (id) => {\n    axios.delete(`/api/institute/delete/${id}`).then((response) => {\n      let updateInstitutes = [...institutes].filter(\n        (institute) => institute.id !== id\n      );\n      setInstitutes(updateInstitutes);\n    });\n  };\n\n  return (\n    <div className=\"institutes\">\n      <Modal\n        title={modal?.data?.id ? \"Edit Institute name\" : \"Add Institute name\"}\n        open={modal.isOpen}\n        onOk={() => {\n          if (modal.data.id) {\n            axios\n              .patch(`/api/institute/edit/${modal.data.id}`, modal.data)\n              .then((response) => {\n                if (response.status === 200) {\n                  let newInstitutes = institutes.map((element) => {\n                    if (element.id === response.data.id) {\n                      element = response.data;\n                    }\n\n                    return element;\n                  });\n\n                  setInstitutes(newInstitutes);\n\n                  setModal({ isOpen: false, data: {} });\n                }\n              });\n          } else {\n            axios.post(`/api/institute/create`, modal.data).then((response) => {\n              if (response.status === 201) {\n                setInstitutes(institutes.concat(response.data));\n\n                setModal({ isOpen: false, data: {} });\n              } else {\n                console.log(response);\n              }\n            });\n          }\n        }}\n        onCancel={() => setModal({ isOpen: false, data: {} })}\n      >\n        <Input\n          placeholder=\"Institute name\"\n          value={modal?.data?.name}\n          onChange={(event) => {\n            setModal({\n              ...modal,\n              data: {\n                ...modal.data,\n                name: event.target.value,\n              },\n            });\n          }}\n        />\n      </Modal>\n\n      <Route exact path=\"/dashboard/institutes\">\n        <Button\n          type=\"primary\"\n          onClick={() => setModal({ isOpen: true, data: {} })}\n        >\n          Add Institute\n        </Button>\n        {!institutes ? (\n          <></>\n        ) : (\n          <Table\n            dataSource={institutes}\n            rowKey=\"id\"\n            columns={[\n              {\n                title: \"ID\",\n                dataIndex: \"id\",\n                key: \"id\",\n              },\n              {\n                title: \"Name\",\n                dataIndex: \"name\",\n                key: \"name\",\n                render: (name, row) => (\n                  <Link to={`/dashboard/institutes/${row.id}`}>{name}</Link>\n                ),\n              },\n              {\n                title: \"Actions\",\n                dataIndex: \"actions\",\n                width: 50,\n                render: (_, row) => (\n                  <div style={{ display: \"flex\", gap: 10 }}>\n                    <Popconfirm\n                      title=\"Sure to delete?\"\n                      onConfirm={() => removeInstitute(row.id)}\n                    >\n                      <DeleteOutlined />\n                    </Popconfirm>\n                    <EditOutlined\n                      onClick={() => setModal({ isOpen: true, data: row })}\n                    />\n                  </div>\n                ),\n              },\n              {\n                title: \"Show\",\n                dataIndex: \"show\",\n                width: 50,\n                render: (show, row) => (\n                  <Link to={`/dashboard/institutes/${row.id}`}>\n                    {<Button type=\"primary\">Show Departments</Button>}\n                  </Link>\n                ),\n              },\n            ]}\n          />\n        )}\n      </Route>\n      <Route path=\"/dashboard/institutes/:instituteId\">\n        <Suspense>\n          <Departments />\n        </Suspense>\n      </Route>\n    </div>\n  );\n};\n\nexport default Institutes;\n","import React, { useState } from \"react\";\nimport { Button, Card, Form } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n// Components\nimport { useMemo } from \"react\";\n\nconst Invitation = () => {\n    const { t } = useTranslation();\n\n    const [type, setType] = useState(\"admin\");\n \n    const [form] = Form.useForm();\n\n    const Layout = useMemo(() => {\n        let forms = {\n            admin: require('../../../components/Forms/auth/admin').default\n        }\n\n        if (!forms[type]) {\n            const layout = require(`../../../components/Forms/auth/${type}`)?.default;\n            if (layout) {\n                forms[type] = layout;\n            }\n        }\n        return forms[type];\n    }, [type]);\n\n    const onFinish = () => {\n\n    };\n\n    return (\n        <>\n            <Card\n                className='Login__form wide'\n                actions={['admin', 'student', 'teacher'].map(item => {\n                    return <Button type=\"primary\" ghost={type !== item} className=\"form-button\" onClick={() => setType(item)}>{t(item)}</Button>;\n                })}\n            >\n                <Layout  />\n            </Card>\n        </>\n    )\n}\n\nexport default Invitation;","import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"../../../axios\";\nimport { Table } from \"antd\";\n\n\nconst Admins = () => {\n  const [admins, setAdmins] = useState(null);\n  useEffect(() => {\n    axios.get(\"/api/admin/get\").then((response) => {\n      setAdmins(response.data)\n      // console.log(response);\n    }).catch(() => setAdmins([]));\n  }, []);\n\n  return (\n    <div className=\"admins\">\n      <Route exact path='/dashboard/editAdmins'>\n        {!admins\n          ? <></>\n          : <Table\n            dataSource={admins}\n            rowKey=\"id\"\n            columns={[\n              {\n                title: 'Patronymic',\n                dataIndex: 'patronymic',\n                key: 'patronymic',\n\n              },\n              {\n                title: 'FirstName',\n                dataIndex: 'firstName',\n                key: 'firstName',\n\n              },\n              {\n                title: 'LastName',\n                dataIndex: 'lastName',\n                key: 'LastName',\n\n              },\n              {\n                title: 'Patronymic',\n                dataIndex: 'patronymic',\n                key: 'patronymic',\n\n              },\n              {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email'\n              },\n              {\n                title: 'Actions',\n                dataIndex: 'actions',\n                width: 50,\n\n              }\n            ]}\n          />}\n      </Route>\n    </div>\n  )\n}\n\n\nexport default Admins;","import React, { useEffect, useState } from 'react';\nimport { Table, Popconfirm, Input, Modal, Button } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\nimport axios from \"../../../axios\";\nimport {  Route } from 'react-router-dom';\n\n\n\nconst AllInstitutes = () => {\n  const [institutes, setInstitutes] = useState(null);\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n\n  useEffect(() => {\n    axios.get(\"/api/institute/get\").then((response) => {\n      setInstitutes(response.data)\n    }).catch(() => setInstitutes([]));\n  }, []);\n\n  const removeInstitute = (id) => {\n    axios.delete(`/api/institute/delete/${id}`).then((response) => {\n      let updateInstitutes = [...institutes].filter((institute) => institute.id !== id);\n      setInstitutes(updateInstitutes);\n    });\n  };\n\n  return (\n    <div className='institutes'>\n      <Modal title={modal?.data?.id ? 'Edit Institute name' : 'Add Institute name'} open={modal.isOpen} onOk={() => {\n        if (modal.data.id) {\n          axios.patch(`/api/institute/edit/${modal.data.id}`, modal.data).then(response => {\n            if (response.status === 200) {\n              let newInstitutes = institutes.map(element => {\n                if (element.id === response.data.id) {\n                  element = response.data\n                }\n\n                return element\n              });\n\n              setInstitutes(newInstitutes);\n\n              setModal({ isOpen: false, data: {} })\n            } else {\n              // console.log(response);\n            }\n          })\n        } \n      }} onCancel={() => setModal({ isOpen: false, data: {} })}>\n        <Input placeholder=\"Institute name\" value={modal?.data?.name} onChange={(event) => {\n          setModal({\n            ...modal,\n            data: {\n              ...modal.data,\n              name: event.target.value\n            }\n          })\n        }} />\n      </Modal>\n\n      <Route exact path='/dashboard/allinstitutes'>\n       \n        {!institutes\n          ? <></>\n          : <Table\n            dataSource={institutes}\n            rowKey=\"id\"\n            columns={[\n              {\n                title: 'ID',\n                dataIndex: 'id',\n                key: 'id',\n\n              },\n              {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n              },\n              {\n                title: 'Actions',\n                dataIndex: 'actions',\n                width: 50,\n                render: (_, row) =>\n                  <div style={{ display: 'flex', gap: 10 }}>\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => removeInstitute(row.id)}>\n                      <DeleteOutlined />\n                    </Popconfirm>\n                    <EditOutlined onClick={() => setModal({ isOpen: true, data: row })} />\n                  </div>\n              }\n            ]}\n          />}\n      </Route>\n     \n    </div>\n  );\n}\n\nexport default AllInstitutes;","import React, { useEffect, useState } from 'react';\nimport { Table, Popconfirm, Form} from 'antd';\nimport { DeleteOutlined} from '@ant-design/icons';\n\nimport axios from \"../../../axios\";\nimport {  Route } from 'react-router-dom';\n\n\nconst Students = () => {\n  const [students, setStudents] = useState(null);\n  const form = Form.useForm()\n\n  useEffect(() => {\n    axios.get(\"/api/student/get\").then((response) => {\n      setStudents(response.data)\n    }).catch(() => setStudents([]));\n  }, []);\n  const onFinish = async () => {\n    const values = await form.validateFields();\n    values.birthDate = !values['birthDate'] ? \"\" : values['birthDate'].format('YYYY-MM-DD');\n  }\n  const removeStudents = (id) => {\n    axios.delete(`/api/student/delete/${id}`).then((response) => {\n      let updateStudents = [...students].filter((student) => student.id !== id);\n      setStudents(updateStudents);\n    });\n  };\n\n  return (\n    <div className='institutes'>\n      <Route exact path='/dashboard/students'>\n        {!students\n          ? <></>\n          : <Table\n            dataSource={students}\n            rowKey=\"id\"\n            onFinish={onFinish}\n            columns={[\n              {\n                title: 'ID',\n                dataIndex: 'id',\n                key: 'id',\n\n              },\n              {\n                title: 'FirstName',\n                dataIndex: 'firstName',\n                key: 'firstName',           \n              },\n              {\n                title: 'LasttName',\n                dataIndex: 'lastName',\n                key: 'lastName',           \n              },\n              {\n                title: 'Patronymic',\n                dataIndex: 'patronymic',\n                key: 'patronymic',           \n              },\n              {\n                title: 'BirthDate',\n                dataIndex: 'birthDate',\n                key: 'birthDate',           \n              },\n              {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email',           \n              },\n              {\n                title: 'Actions',\n                dataIndex: 'actions',\n                width: 50,\n                render: (_, row) =>\n                  <div style={{ display: 'flex', gap: 10 }}>\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => removeStudents(row.id)}>\n                      <DeleteOutlined />\n                    </Popconfirm>                  \n                  </div>\n              }\n            ]}\n          />}\n      </Route>\n    \n    </div>\n  );\n}\n\nexport default Students;","import React, { useEffect, useState } from 'react';\nimport { Table, Popconfirm, Button, Form, Select } from 'antd';\nimport { DeleteOutlined} from '@ant-design/icons';\n\nimport axios from \"../../../axios\";\nimport { Route } from 'react-router-dom';\n\n\nconst Teacher = () => {\n  const [teachers, setTeachers] = useState(null);\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n\n  useEffect(() => {\n    axios.get(\"/api/teacher/get\").then((response) => {\n      setTeachers(response.data)\n    }).catch(() => setTeachers([]));\n  }, []);\n\n  const removeTeacher = (id) => {\n    axios.delete(`/api/teacher/delete/${id}`).then((response) => {\n      let updateTeachers = [...teachers].filter((teacher) => teacher.id !== id);\n      setTeachers(updateTeachers);\n    });\n  };\n\n  return (\n    <div className='institutes'>\n      <Route exact path='/dashboard/teachers'>\n      <Form.Item label= \"Institute\" name='instituteId'>\n        <Select defaultValue=\"...\"    />\n      </Form.Item>\n\n        {!teachers\n          ? <></>\n          : <Table\n            dataSource={teachers}\n            rowKey=\"id\"\n            columns={[\n              {\n                title: 'FirstName',\n                dataIndex: 'firstName',\n                key: 'firstName',           \n              },\n              {\n                title: 'LasttName',\n                dataIndex: 'lastName',\n                key: 'lastName',           \n              },\n              {\n                title: 'Patronymic',\n                dataIndex: 'patronymic',\n                key: 'patronymic',           \n              },\n              {\n                title: 'Position',\n                dataIndex: 'position',\n                key: 'position',           \n              },\n              {\n                title: 'BirthDate',\n                dataIndex: 'birthDate',\n                key: 'birthDate',           \n              },\n              {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email',           \n              },\n              {\n                title: 'Actions',\n                dataIndex: 'actions',\n                width: 50,\n                render: (_, row) =>\n                  <div style={{ display: 'flex', gap: 10 }}>\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => removeTeacher(row.id)}>\n                      <DeleteOutlined />\n                    </Popconfirm>\n                  </div>\n              }\n            ]}\n          />}\n      </Route>\n    \n    </div>\n  );\n}\n\nexport default Teacher;","import React, { useEffect, useState } from \"react\";\nimport { Table, Popconfirm, Input, Modal } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n\nimport axios from \"../../../axios\";\nimport { Link, Route } from \"react-router-dom\";\n\nconst AllDepartments = () => {\n  const [departments, setDepartments] = useState(null);\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n\n  useEffect(() => {\n    axios\n      .get(\"/api/department/get\")\n      .then((response) => {\n        setDepartments(response.data);\n      })\n      .catch(() => setDepartments([]));\n  }, []);\n\n  const removeDepartment = (id) => {\n    axios.delete(`/api/department/delete/${id}`).then((response) => {\n      let updateDepartment = [...departments].filter(\n        (department) => department.id !== id\n      );\n      setDepartments(updateDepartment);\n    });\n  };\n\n  return (\n    <div className=\"institutes\">\n      <Modal\n        title={modal?.data?.id ? \"Edit Department name\" : \"Add Department name\"}\n        open={modal.isOpen}\n        onOk={() => {\n          if (modal.data.id) {\n            axios\n              .patch(`/api/department/edit/${modal.data.id}`, modal.data)\n              .then((response) => {\n                if (response.status === 200) {\n                  let newDepartment = departments.map((element) => {\n                    if (element.id === response.data.id) {\n                      element = response.data;\n                    }\n\n                    return element;\n                  });\n\n                  setDepartments(newDepartment);\n\n                  setModal({ isOpen: false, data: {} });\n                } else {\n                  // console.log(response);\n                }\n              });\n          }\n        }}\n        onCancel={() => setModal({ isOpen: false, data: {} })}\n      >\n        <Input\n          placeholder=\"Institute name\"\n          value={modal?.data?.name}\n          onChange={(event) => {\n            setModal({\n              ...modal,\n              data: {\n                ...modal.data,\n                name: event.target.value,\n              },\n            });\n          }}\n        />\n      </Modal>\n\n      <Route exact path=\"/dashboard/departments\">\n        {!departments ? (\n          <></>\n        ) : (\n          <Table\n            dataSource={departments}\n            rowKey=\"id\"\n            columns={[\n              {\n                title: \"ID\",\n                dataIndex: \"id\",\n                key: \"id\",\n              },\n              {\n                title: \"Name\",\n                dataIndex: \"name\",\n                key: \"name\",\n              },\n              {\n                title: \"Actions\",\n                dataIndex: \"actions\",\n                width: 50,\n                render: (_, row) => (\n                  <div style={{ display: \"flex\", gap: 10 }}>\n                    <Popconfirm\n                      title=\"Sure to delete?\"\n                      onConfirm={() => removeDepartment(row.id)}\n                    >\n                      <DeleteOutlined />\n                    </Popconfirm>\n                    <EditOutlined\n                      onClick={() => setModal({ isOpen: true, data: row })}\n                    />\n                  </div>\n                ),\n              },\n            ]}\n          />\n        )}\n      </Route>\n    </div>\n  );\n};\n\nexport default AllDepartments;\n","import React, { useEffect, useState } from 'react';\nimport { Table, Popconfirm, Input, Modal, Button, Form, Select  } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport axios from \"../../../axios\";\nimport {Route, useParams } from 'react-router-dom';\n\n\n\nconst Courses = () => {\n  const [courses, setCourses] = useState(null);\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n  const { departmentId, parentId   } = useParams();\n  const [tableData, setTableData] = useState(null);\n  const [type, setType] = useState(\"courses\");\n\n  useEffect(() => {\n    axios.get(\"/api/course/get\").then((response) => {\n      setCourses(response.data)\n    }).catch(() => setCourses([]));\n  }, []);\n\n  const removeCourse = (id) => {\n    axios.delete(`/api/course/delete/${id}`).then((response) => {\n      let updateCourse = [...courses].filter((course) => course.id !== id);\n      setCourses(updateCourse);\n    });\n  };\n\n  return (\n    <div className='courses'>\n      <Modal title={modal?.data?.id ? 'Edit Course name' : 'Add Course name'} open={modal.isOpen} onOk={() => {\n        if (modal.data.id) {\n          axios.patch(`/api/course/edit/${modal.data.id}`, modal.data).then(response => {\n            if (response.status === 200) {\n              let newCourses = courses.map(element => {\n                if (element.id === response.data.id) {\n                  element = response.data\n                }\n\n                return element\n              });\n\n              setCourses(newCourses);\n\n              setModal({ isOpen: false, data: {} })\n            } else {\n              // console.log(response);\n            }\n          })\n        } \n      }} onCancel={() => setModal({ isOpen: false, data: {} })}>\n        <Form>\n          <Form.Item label=\"Number\" name=\"number\">\n            <Input placeholder=\"Course number\" value={modal?.data?.number} onChange={(event) => {\n              setModal({\n                ...modal,\n                data: {\n                  ...modal.data,\n                  number: event.target.value\n                }\n              })\n            }} />\n          </Form.Item>\n\n          <Form.Item label=\"Degree\" name='degree'>\n            <Select defaultValue=\"...\" onChange={(value) => {\n              setModal({\n                ...modal,\n                data: {\n                  ...modal.data,\n                  degree: value,\n                }\n              })\n            }} options={[{ label: \"master\", value: \"master\" }, { label: \"bachelor\", value: \"bachelor\" }, { label: \"PhD\", value: \"PhD\" }]} />\n          </Form.Item>\n\n          <Form.Item label=\"Type\" name='type'>\n            <Select defaultValue=\"...\" onChange={(value) => {\n              setModal({\n                ...modal,\n                data: {\n                  ...modal.data,\n                  type: value,\n                }\n              })\n            }} options={[{ label: \"available\", value: \"available\" }, { label: \"remotely\", value: \"remotely\" }]} />\n          </Form.Item>\n        </Form>\n        </Modal>\n\n      <Route exact path='/dashboard/courses'>\n       \n        {!courses\n          ? <></>\n          : <Table\n            dataSource={courses}\n            rowKey=\"id\"\n            columns={[\n              {\n                title: 'ID',\n                dataIndex: 'id',\n                key: 'id',\n\n              },\n              {\n                title: 'Number',\n                dataIndex: 'number',\n                key: 'number',\n              },\n              {\n                title: 'Type',\n                dataIndex: 'type',\n                key: 'type',\n              },\n              {\n                title: 'Degree',\n                dataIndex: 'degree',\n                key: 'degree',\n              },\n              {\n                title: 'Actions',\n                dataIndex: 'actions',\n                width: 50,\n                render: (_, row) =>\n                  <div style={{ display: 'flex', gap: 10 }}>\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => removeCourse(row.id)} >\n                      <DeleteOutlined />\n                    </Popconfirm>\n                    <EditOutlined onClick={() => setModal({ isOpen: true, data: row })} />\n                  </div>\n              }\n            ]}\n          />}\n      </Route>\n     \n    </div>\n  );\n}\n\n\nexport default Courses;","import React, { useEffect, useState } from 'react';\nimport { Table, Popconfirm, Input, Modal,Form,Select} from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\n\nimport axios from \"../../../axios\";\nimport { Link, Route, useParams } from 'react-router-dom';\n\n\n\nconst Groups = () => {\n  const [groups, setGroups] = useState(null);\n  const [modal, setModal] = useState({ isOpen: false, data: {} });\n  const {courseId, groupId, parentId } = useParams();\n  const [tableData, setTableData] = useState(null);\n  const [type, setType] = useState(\"groups\");\n\n  useEffect(() => {\n    axios.get(\"/api/group/get-course/\").then((response) => {\n        console.log(response);\n      setGroups(response.data)\n    }).catch(() => setGroups([]));\n  }, []);\n\n  const removeGroup = (id) => {\n    axios.delete(`/api/group/delete/${id}`).then((response) => {\n      let updateGroups = [...groups].filter((group) => group.id !== id);\n      setGroups(updateGroups);\n    });\n  };\n\n  return (\n    <div className='groups'>\n      <Modal title={modal?.data?.id ? 'Edit group number' : 'Add group number'} open={modal.isOpen} onOk={() => {\n        if (modal.data.id) {\n          axios.patch(`/api/group/edit/${modal.data.id}`, modal.data, { parent_id: parentId }).then(response => {\n           \n            if (response.status === 200) {\n              let newGroup = tableData.map(element => {\n                if (element.id === response.data.id) {\n                  element = response.data\n                }\n\n                return element\n              });\n\n              setTableData(newGroup);\n\n              setModal({ isOpen: false, data: {} })\n            } else {\n              // console.log(response);\n            }\n          })\n        } }} onCancel={() => setModal({ isOpen: false, data: {} })}>\n        <Form.Item label=\"Number\" name=\"number\"> \n       <Input placeholder=\"Group number\" value={modal?.data?.name} onChange={(event) => {\n         setModal({\n           ...modal,\n           data: {\n             ...modal.data,\n             number: event.target.value,\n\n           }\n         })\n       }} />\n      </Form.Item>\n\n      <Form.Item label=\"number\" name='number'>\n       <Select defaultValue=\"...\" onChange={(value) => {\n         setModal({\n           ...modal,\n           data: {\n             ...modal.data,\n             parent_id: value,\n           }\n         })\n       }} options={tableData?.map(data => ({\n         label: data.number,\n         value: data.id\n       }))} />\n     </Form.Item>\n     </Modal>\n\n      <Route exact path='/dashboard/groups'>\n        {!groups\n          ? <></>\n          : <Table\n            dataSource={groups}\n            rowKey=\"id\"\n            columns={[\n              {\n                title: 'ID',\n                dataIndex: 'id',\n                key: 'id',\n\n              },\n              {\n                title: 'Number',\n                dataIndex: 'number',\n                key: 'number',\n              },\n              {\n                title:\"ParentId\",\n                dataIndex:\"parentId\",\n                key:\"parentId\"\n              },\n              {\n                title:\"CourseId\",\n                dataIndex:\"course\",\n                key:\"courseId\"\n              },\n           \n              {\n                title: 'Actions',\n                dataIndex: 'actions',\n                width: 50,\n                render: (_, row) =>\n                  <div style={{ display: 'flex', gap: 10 }}>\n                    <Popconfirm title=\"Sure to delete?\"  onConfirm={() => removeGroup(row.id)}>\n                      <DeleteOutlined />\n                    </Popconfirm>\n                    <EditOutlined onClick={() => setModal({ isOpen: true, data: row })} />\n                  </div>\n              }\n            ]}\n          />}\n      </Route>\n     \n    </div>\n  );\n}\n\nexport default Groups;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Pages\nimport Institutes from \"./../Institutes\";\nimport Invitation from \"./../Invitation\";\nimport Admins from \"./../AdminGet/Admins\";\nimport AllInstitutes from \"./../All/Institutes\";\nimport Students from \"./../All/students\";\nimport Teacher from \"./../All/teachers\";\nimport Departments from \"./../All/departments\";\nimport Courses from \"./../All/courses\";\nimport Groups from \"./../All/groups\";\n\nconst AdminRoutes = () => {\n  return (\n      <>\n        <Route exact path=\"/dashboard\">\n          <div className=\"welcome\">Welocome to Admin dashboard</div>\n        </Route>\n\n        <Route path=\"/dashboard/editAdmins\">\n          <Admins />\n        </Route>\n\n        <Route path=\"/dashboard/institutes\">\n          <Institutes />\n        </Route>\n\n        <Route path=\"/dashboard/invitation\">\n          <Invitation />\n        </Route>\n\n        <Route path=\"/dashboard/teachers\">\n          <Teacher />\n        </Route>\n\n        <Route path=\"/dashboard/students\">\n          <Students />\n        </Route>\n\n        <Route path=\"/dashboard/allinstitutes\">\n          <AllInstitutes />\n        </Route>\n\n        <Route path=\"/dashboard/departments\">\n          <Departments />\n        </Route>\n\n        <Route path=\"/dashboard/courses\">\n          <Courses />\n        </Route>\n\n        <Route path=\"/dashboard/groups\">\n          <Groups />\n        </Route>\n      </>\n  );\n};\n\nexport default AdminRoutes;\n","var map = {\n\t\"./admin\": 29813,\n\t\"./admin.jsx\": 29813,\n\t\"./student\": 14993,\n\t\"./student.jsx\": 14993,\n\t\"./teacher\": 25158,\n\t\"./teacher.jsx\": 25158\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31512;"],"names":["Form","form","t","useTranslation","message","messageApi","contextHolder","useState","type","rules","useSelector","state","rule","useMemo","onFinish","validateFields","values","birthDate","format","undefined","axios","invitation","then","response","status","data","open","content","duration","resetFields","catch","error","errors","forEach","field","setFields","name","labelCol","span","wrapperCol","layout","label","htmlType","className","institutes","setInstitutes","departments","setDepartments","selectInstitute","setSelectInstitute","course","setCourse","group","setGroup","subgroup","setSubGroup","selectDepartments","setSelectDepartments","selectCourse","setSelectCourse","useEffect","map","institute","value","id","defaultValue","options","onChange","department","number","degree","parents","filter","g","parentId","subGroup","courses","setCourses","groups","setGroups","children","subgroups","push","key","element","multiple","useParams","courseId","groupId","modal","setModal","setKey","tableData","setTableData","setType","loading","getTableData","useCallback","Columns","title","dataIndex","width","render","_","row","style","display","gap","onConfirm","removeGroup","DeleteOutlined","EditOutlined","onClick","setFieldsValue","teachers","students","prev","item","onOk","getFieldValue","getFieldsValue","parent_id","newGroup","console","log","course_id","group_id","asParent","onCancel","placeholder","exact","path","rowKey","dataSource","columns","Layout","departmentId","isOpen","setOpen","handleGetCourses","to","removeCourse","show","newCourse","department_id","concat","event","target","placement","onClose","Group","instituteId","handleGetInstitute","removeDepartment","newDepartment","institute_id","newInstitutes","updateInstitutes","Suspense","forms","admin","require","default","actions","ghost","admins","setAdmins","setStudents","updateStudents","student","setTeachers","updateTeachers","teacher","updateDepartment","newCourses","updateCourse","updateGroups","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}